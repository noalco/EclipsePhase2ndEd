<DocumentElement xmlns="http://tempuri.org/Ruleset.xsd">
  <Scripts>
    <ScriptName>RollHandlers</ScriptName>
    <FolderID>24</FolderID>
    <Script>--        local rMessageResult = ChatManager.createBaseMessage(rSource, rRoll.sUser);
--        rMessageResult.text = rMessage.text;
--        rCreature = DB.findNode(rTarget.sCTNode);

OOB_ADD_ATTACK="OOB_ADD_ATTACK";

function onInit()
	OOBManager.registerOOBMsgHandler(OOB_ADD_ATTACK, OOBAddAttack);
end

function OOBAddAttack(msgOOB)
	if Session.IsHost then
		AddAttack(msgOOB.sSourceCTNode, msgOOB.sTargetCTNode, msgOOB.sTypeAttack, msgOOB.sTypeResult, msgOOB.sResult, msgOOB.nRollTotal);
	end
end

function AddAttack(sSourceCTNode, sTargetCTNode, sTypeAttack, sTypeResult, sResult, nRollTotal)
	if Session.IsHost and sSourceCTNode and sTargetCTNode and sTypeAttack and sTypeResult and sResult and nRollTotal then
		if not combat.tAttacts[sSourceCTNode] then
			combat.tAttacts[sSourceCTNode]={}
		end
		if not combat.tAttacts[sSourceCTNode][sTargetCTNode] then
			combat.tAttacts[sSourceCTNode][sTargetCTNode]={}
		end
		if not combat.tAttacts[sSourceCTNode][sTargetCTNode][sTypeAttack] then
			combat.tAttacts[sSourceCTNode][sTargetCTNode][sTypeAttack]={}
		end
		combat.tAttacts[sSourceCTNode][sTargetCTNode][sTypeAttack]["s"..sTypeResult.."Result"]=sResult;
		combat.tAttacts[sSourceCTNode][sTargetCTNode][sTypeAttack]["n"..sTypeResult.."Result"]=nRollTotal;
		combat.ResolveCombat(sSourceCTNode, sTargetCTNode, sTypeAttack);
	end
end

function CombatHandler(rSource, rTarget, rRoll, sTypeResult)
    local sResult=CheckHandler(rSource, rTarget, rRoll);
	local sTypeAttack="";
    if rSource and rTarget and rSource.sCTNode and rTarget.sCTNode then
        if rRoll.sDesc:match("MELEE") then
			sTypeAttack="MELEE";
		else
			sTypeAttack="RANGED";
		end
		if Session.IsHost then
			AddAttack(rSource.sCTNode, rTarget.sCTNode, sTypeAttack, sTypeResult, sResult, ActionsManager.total(rRoll));
		else
			local msgOOB={};
			msgOOB.type=OOB_ADD_ATTACK;
			msgOOB.sSourceCTNode=rSource.sCTNode;
			msgOOB.sTargetCTNode=rTarget.sCTNode;
			msgOOB.sTypeAttack=sTypeAttack;
			msgOOB.sTypeResult=sTypeResult
			msgOOB.sResult=sResult;
			msgOOB.nRollTotal=ActionsManager.total(rRoll);
			Comm.deliverOOBMessage(msgOOB);
		end
    end
end

function AttackHandler(rSource, rTarget, rRoll)
	CombatHandler(rSource, rTarget, rRoll, "Attack");
end

function DefenseHandler(rSource, rTarget, rRoll) 
	CombatHandler(rTarget, rSource, rRoll, "Defense");
end

function InitHandler(rSource, rTarget, rRoll)
    local rMessage = ActionsManager.createActionMessage(rSource, rRoll);
    Comm.deliverChatMessage(rMessage);    

    if (rSource) then
        local nTotal = ActionsManager.total(rRoll);
        rCreature = DB.findNode(rSource.sCreatureNode);
        rCreature.getChild("initresult").setValue(nTotal);
    end
end

function RollResultFrom0to99(rRoll)
--	{ s'nBonuses' = s'0', 
--	s'aDice' = { 
--		#1 = { 
--			s'value' = #67, 
--			s'type' = s'd100', 
--			s'result' = #67 }, 
--		s'expr' = s'1d100', 
--		s'total' = #67 }, 
--	s'nMod' = #0, 
--	s'sType' = s'CognitionCheckRollAction', 
--	s'nTotal' = #67, 
--	s'bSecret' = bFALSE, 
--	s'sDesc' = s'[Cognition vs 90]' }

	rRoll.aDice[1].value=rRoll.aDice[1].value%100;
	rRoll.aDice[1].result=rRoll.aDice[1].result%100;
	rRoll.aDice.total=rRoll.aDice.total%100;
	rRoll.nTotal=rRoll.nTotal%100;
	return rRoll;
end

function CheckHandler(rSource, rTarget, rRoll)
	rRoll=RollResultFrom0to99(rRoll)
	local nMod=rRoll.nMod;
	rRoll.nMod=0;
    local rMessage = ActionsManager.createActionMessage(rSource, rRoll);
	local nTarget=tonumber(rMessage.text:match("%(vs (%-*%d+)%)"));
	local sTarget=""..nTarget;
	if nTarget&lt;0 then
		sTarget="%"..sTarget;
	end
	rMessage.text=rMessage.text:gsub("vs "..sTarget, "vs "..math.max(0,nTarget+nMod));
	nTarget=nTarget+nMod;

	local nTotal = ActionsManager.total(rRoll);
	rMessage.text=rMessage.text.." ["..RollChecks.RollCheck(nTotal, nTarget):upper().."]";
	Comm.deliverChatMessage(rMessage);
	return RollChecks.RollCheck(nTotal, nTarget):upper();
end
</Script>
    <RegisterScript>true</RegisterScript>
    <Encoding />
  </Scripts>
</DocumentElement>