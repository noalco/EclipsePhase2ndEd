<DocumentElement xmlns="http://tempuri.org/Ruleset.xsd">
  <Scripts>
    <ScriptName>morphs_list_text</ScriptName>
    <FolderID>9</FolderID>
    <Script>-- 
-- Please see the license.html file included with this distribution for 
-- attribution and copyright information.
--

local sFocus = "name";

function onInit()
	if newfocus then
		sFocus = newfocus[1];
	end
end

function onListChanged()
	update();
end

function update()
	local sEdit = getName() .. "_iedit";
	if window[sEdit] then
		local bEdit = (window[sEdit].getValue() == 1);
		for _,w in ipairs(getWindows()) do
			w.idelete.setVisibility(bEdit);
		end
	end
end

function addEntry(bFocus)
	local w = createWindow();
	if bFocus and w[sFocus] then
		w[sFocus].setFocus();
	end
	if self.onEntryAdded then
		self.onEntryAdded(w);
	end
	return w;
end

function onDrop(x, y, dragdata)
	local sClass,sRecord = dragdata.getShortcutData();
	if sClass=="MorphDataSidebarWindow" or sClass=="MorphDataWindow" or sClass=="MorphListBase" then
		Debug.chat(sClass)
		local recordNode=DB.findNode(sRecord);
		local newMorph=createWindow();
		DB.copyNode(recordNode, newMorph.getDatabaseNode());
		newMorph.link.setValue("MorphDataWindow", "");
		if sClass=="MorphDataSidebarWindow" then
			ParseTraits(newMorph.getDatabaseNode(), recordNode);
			ParseWare(newMorph.getDatabaseNode(), recordNode);
		end
	end
end

function ParseTraits(newMorph, recordNode)
	local sTraits=DB.getValue(recordNode, "Traits", "");
	if not sTraits or sTraits=="" then -- or DB.getChild(newMorph, "TraitList") then
		return;
	end
	sTraits=sTraits:gsub("\n", " ");
	while sTraits:match("  ") do sTraits=sTraits:gsub("  ", " "); end
	local NewTraitNode;
	local sTraitName;
	local nLevel;
	local sLevelField;
	local TraitListNode=DB.createChild(newMorph, "TraitList");
	local aSpecializations;
	local tSpecializations={};
	local sSpecName;
	local sPecLevel;
	local straits={};
	local sAux;
	local sAux2;
	while sTraits:match("%(.-,.-%)") do -- Change character ',' for '|' in format "(specialization, level X)" because traits are also separated by ','
		sAux=sTraits:match("%((.-,.-)%)");
		sAux2=sAux:gsub(",", "|");
		sTraits=sTraits:gsub(sAux, sAux2);
	end
	local aTraits,_ = StringManager.split(sTraits, ",", true);
	for i=1,#aTraits do
		if aTraits[i]:match(".*%s*%(.*%)") then
			sTraitName=aTraits[i]:match("(.*)%(.*%)") or "";
			local sInnerData=aTraits[i]:match("%((.*)%)") or "";
			tSpecializations={};
			if sInnerData:match(";") then
--				Enhanced Behavior (Aggressiveness, Level 2; Cooperation, Level 2) -&gt; Morph name (especializaci칩n 1, Level X; especializaci칩n 2, Level Y, ...)
				aSpecializations,_ = StringManager.split(sInnerData, ";", true);				
				for i=1,#aSpecializations do
					sSpecName=aSpecializations[i]:match("(.*)|%s*[Ll][Ee][Vv][Ee][Ll]") or "";
					sPecLevel=aSpecializations[i]:lower():match("level%s*(%d+)") or "1";
					table.insert(tSpecializations, {sSpecName=sSpecName, nPecLevel=tonumber(sPecLevel)});
				end
			elseif sInnerData:lower():match(".*|%s*level %d+") then
--				Enhanced Behavior (Patience, Level 2) -&gt; Morph name (especializaci칩n, Level X)
				sSpecName=sInnerData:match("(.*)|%s*[Ll][Ee][Vv][Ee][Ll]") or "";
				sPecLevel=sInnerData:lower():match("level%s*(%d+)") or "1";
				table.insert(tSpecializations, {sSpecName=sSpecName, nPecLevel=tonumber(sPecLevel)});
			elseif sInnerData:lower():match("level %d+") then
--				Exotic Morphology (Level 1) -&gt; Morph name (Level X)
				nLevel=tonumber(sInnerData:lower():match("level (%d+)"));
				sLevelField="TraitLevel";
			else
				nLevel=nil;
				sLevelField=nil;
			end
		else
			sTraitName=aTraits[i];
			nLevel=nil;
			sLevelField=nil;
		end
		while sTraitName:sub(-1)==" " do sTraitName=sTraitName:sub(1, -2); end
		
		if #tSpecializations&gt;0 then
			sLevelField="TraitLevel";
			for i=1,#tSpecializations do
				NewTraitNode=Tools.SearchRecord(sTraitName, "traits", sLevelField, tSpecializations[i].nPecLevel);
				local w=DB.createChild(TraitListNode);
				if NewTraitNode and NewTraitNode~="" then
					DB.copyNode(NewTraitNode, w);
					DB.setValue(w, "name", "string", sTraitName.." ("..tSpecializations[i].sSpecName..")");
				else
					DB.setValue(w, "name", "string", sTraitName.." ("..tSpecializations[i].sSpecName..")");
					DB.setValue(w, "IsMorph", "number", 1);
					DB.setValue(w, "TraitLevel", "number", tSpecializations[i].nPecLevel);
				end
			end
		else
			NewTraitNode=Tools.SearchRecord(sTraitName, "traits", sLevelField, nLevel);
			local w=DB.createChild(TraitListNode);
			if NewTraitNode and NewTraitNode~="" then
				DB.copyNode(NewTraitNode, w);
			else
				DB.setValue(w, "name", "string", sTraitName);
				DB.setValue(w, "IsMorph", "number", 1);
				if nLevel and nLevel&gt;1 then
					DB.setValue(w, "TraitLevel", "number", nLevel);
				end
			end
		end
	end
end

function ParseWare(newMorph, recordNode)
--	TODO: A침adir un checkbox a los items para indicar que son items (wear) obtenidos de morph
	local sWares=DB.getValue(recordNode, "Ware", "");
	if sWares=="" then -- or DB.getChild(newMorph, "WareList") then
		return;
	end
	sWares=sWares:gsub("\n", " ");
	while sWares:match("  ") do sWares=sWares:gsub("  ", " "); end
	local aWares,_ = StringManager.split(sWares, ",", true);
	local NewWareNode;
	local WareListNode=DB.createChild(newMorph, "WareList");
	for i=1,#aWares do
		while aWares[i]:sub(-1)==" " do aWares[i]=aWares[i]:sub(1, -2); end
		NewWareNode=Tools.SearchRecord(aWares[i], "item");
		local w=DB.createChild(WareListNode);
		if NewWareNode and NewWareNode~="" then
			DB.copyNode(NewWareNode, w);
		else
			DB.setValue(w, "name", "string", aWares[i]);
		end
	end
end
</Script>
    <RegisterScript>false</RegisterScript>
    <Encoding />
  </Scripts>
</DocumentElement>